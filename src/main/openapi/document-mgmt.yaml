---
openapi: 3.0.3
info:
  title: document-management
  description: 1000kit document management
  version: "1.0"
tags:
  - name: DocumentControllerV1
  - name: DocumentSpecificationControllerV1
  - name: DocumentTypeControllerV1
  - name: FileControllerV1
  - name: SupportedMimeTypeControllerV1

paths:
  /v1/document:
    get:
      x-onecx:
        permissions:
          document:
            - read
      tags:
        - DocumentControllerV1
      description: Gets documents by criteria
      operationId: getDocumentByCriteria
      parameters:
        - name: channelName
          in: query
          schema:
            type: string
        - name: createdBy
          in: query
          schema:
            type: string
        - name: endDate
          in: query
          schema:
            type: string
        - name: id
          in: query
          schema:
            type: string
        - name: name
          in: query
          schema:
            type: string
        - name: objectReferenceId
          in: query
          schema:
            type: string
        - name: objectReferenceType
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            format: int32
            default: 0
            minimum: 0
            type: integer
        - name: size
          in: query
          schema:
            format: int32
            default: 200
            maximum: 200
            minimum: 1
            type: integer
        - name: startDate
          in: query
          schema:
            type: string
        - name: state
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/LifeCycleState'
        - name: typeId
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: The corresponding documents resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResult'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
    post:
      x-onecx:
        permissions:
          document:
            - write
      tags:
        - DocumentControllerV1
      description: Create Document
      operationId: createDocument
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentCreateUpdate'
      responses:
        "201":
          description: Created Document resource
          headers:
            Location:
              description: URL of the entity created
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDetail'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
  /v1/document-specification:
    get:
      x-onecx:
        permissions:
          document:
            - read
      tags:
        - DocumentSpecificationControllerV1
      description: Finds all specification of documents
      operationId: getAllDocumentSpecifications
      responses:
        "200":
          description: Found all specification of documents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentSpecification'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
    post:
      x-onecx:
        permissions:
          document:
            - write
      tags:
        - DocumentSpecificationControllerV1
      description: Creates specification of document
      operationId: createDocumentSpecification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentSpecificationCreateUpdate'
      responses:
        "201":
          description: Created specification of document
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentSpecification'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
  /v1/document-specification/{id}:
    get:
      x-onecx:
        permissions:
          document:
            - read
      tags:
        - DocumentSpecificationControllerV1
      description: Gets document specification by id
      operationId: getDocumentSpecificationById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentSpecification'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
    put:
      x-onecx:
        permissions:
          document:
            - write
      tags:
        - DocumentSpecificationControllerV1
      description: Updates specification of document by id
      operationId: updateDocumentSpecificationById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentSpecificationCreateUpdate'
      responses:
        "200":
          description: Updated specification of document by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentSpecification'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
    delete:
      x-onecx:
        permissions:
          document:
            - delete
      tags:
        - DocumentSpecificationControllerV1
      description: Deletes specification of document by id
      operationId: deleteDocumentSpecificationById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Deleted specification of document by id
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
  /v1/document-type:
    get:
      x-onecx:
        permissions:
          document:
            - read
      tags:
        - DocumentTypeControllerV1
      description: Finds all types of document
      operationId: getAllTypesOfDocument
      responses:
        "200":
          description: Found all types of document
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentType'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
    post:
      x-onecx:
        permissions:
          document:
            - write
      tags:
        - DocumentTypeControllerV1
      description: Creates type of document
      operationId: createDocumentType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentTypeCreateUpdate'
      responses:
        "201":
          description: Created type of document
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentType'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
  /v1/document-type/{id}:
    get:
      x-onecx:
        permissions:
          document:
            - read
      tags:
        - DocumentTypeControllerV1
      description: Gets document type by id
      operationId: getDocumentTypeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentType'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
    put:
      x-onecx:
        permissions:
          document:
            - write
      tags:
        - DocumentTypeControllerV1
      description: Updates type of document by id
      operationId: updateDocumentTypeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentTypeCreateUpdate'
      responses:
        "201":
          description: Updated type of document by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentType'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
    delete:
      x-onecx:
        permissions:
          document:
            - delete
      tags:
        - DocumentTypeControllerV1
      description: Deletes type of document by id
      operationId: deleteDocumentTypeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Deleted type of document by id
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
  /v1/document/bulkupdate:
    put:
      x-onecx:
        permissions:
          document:
            - write
      tags:
        - DocumentControllerV1
      description: Bulk Update an document
      operationId: bulkUpdateDocument
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DocumentCreateUpdate'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentDetail'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
  /v1/document/channels:
    get:
      x-onecx:
        permissions:
          document:
            - read
      tags:
        - DocumentControllerV1
      description: Gets all channels
      operationId: getAllChannels
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
  /v1/document/delete-bulk-documents:
    delete:
      x-onecx:
        permissions:
          document:
            - delete
      tags:
        - DocumentControllerV1
      description: Delete Multiple Document by Ids
      operationId: deleteBulkDocuments
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "204":
          description: Delete Documents by ids
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
  /v1/document/file/delete-bulk-attachment:
    delete:
      x-onecx:
        permissions:
          document:
            - delete
      tags:
        - DocumentControllerV1
      description: Delete attachment's files in bulk
      operationId: deleteFilesInBulk
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not found
  /v1/document/file/{attachmentId}:
    get:
      x-onecx:
        permissions:
          document:
            - read
      tags:
        - DocumentControllerV1
      description: Get attachment's file
      operationId: getFile
      parameters:
        - name: attachmentId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
        "404":
          description: Not found
  /v1/document/file/{documentId}/attachments:
    get:
      x-onecx:
        permissions:
          document:
            - read
      tags:
        - DocumentControllerV1
      description: Get all the attachments of the document packaged in a zip file
      operationId: getAllDocumentAttachmentsAsZip
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: string
        - name: client-timezone
          in: header
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
        "400":
          description: Bad request
        "204":
          description: No content
  /v1/document/files/upload/failed/{id}:
    get:
      x-onecx:
        permissions:
          document:
            - read
      tags:
        - DocumentControllerV1
      description: Get data of all the failed attachment based on document ID
      operationId: getFailedAttachmentData
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StorageUploadAudit'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
  /v1/document/show-all-documents:
    get:
      x-onecx:
        permissions:
          document:
            - read
      tags:
        - DocumentControllerV1
      description: Gets all documents by criteria
      operationId: showAllDocumentsByCriteria
      parameters:
        - name: channelName
          in: query
          schema:
            type: string
        - name: createdBy
          in: query
          schema:
            type: string
        - name: endDate
          in: query
          schema:
            type: string
        - name: id
          in: query
          schema:
            type: string
        - name: name
          in: query
          schema:
            type: string
        - name: objectReferenceId
          in: query
          schema:
            type: string
        - name: objectReferenceType
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            format: int32
            default: 0
            minimum: 0
            type: integer
        - name: size
          in: query
          schema:
            format: int32
            default: 200
            maximum: 200
            minimum: 1
            type: integer
        - name: startDate
          in: query
          schema:
            type: string
        - name: state
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/LifeCycleState'
        - name: typeId
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: The corresponding documents resource
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentDetail'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
  /v1/document/{id}:
    get:
      x-onecx:
        permissions:
          document:
            - read
      tags:
        - DocumentControllerV1
      description: Gets Document by Id
      operationId: getDocumentById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDetail'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
    put:
      x-onecx:
        permissions:
          document:
            - write
      tags:
        - DocumentControllerV1
      description: Update an document
      operationId: updateDocument
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentCreateUpdate'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDetail'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
    delete:
      x-onecx:
        permissions:
          document:
            - delete
      tags:
        - DocumentControllerV1
      description: Delete Document by Id
      operationId: deleteDocumentById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Deleted Document by id
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
  /v1/files/bucket/{name}:
    post:
      x-onecx:
        permissions:
          document:
            - write
      tags:
        - FileControllerV1
      summary: Creates a bucket with the given name
      description: Create a bucket
      operationId: createBucket
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Created
        "400":
          description: Bad request
  /v1/files/{bucket}/{path}:
    get:
      x-onecx:
        permissions:
          document:
            - read
      tags:
        - FileControllerV1
      summary: Download file contents
      operationId: downloadFile
      parameters:
        - name: bucket
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: path
          required: true
          schema:
            pattern: '.+'
            type: string
      responses:
        "200":
          description: OK
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
        "404":
          description: Not found
    put:
      x-onecx:
        permissions:
          document:
            - write
      tags:
        - FileControllerV1
      summary: Uploads a file to the given location
      description: Uploads the file
      operationId: uploadFile
      parameters:
        - name: bucket
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: path
          required: true
          schema:
            pattern: .+
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileMultipartBody'
      responses:
        "201":
          description: Created
        "400":
          description: Bad request
    delete:
      x-onecx:
        permissions:
          document:
            - delete
      tags:
        - FileControllerV1
      summary: Deletes the file from Minio object storage
      description: Deletes the file
      operationId: deleteFile
      parameters:
        - name: bucket
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: path
          required: true
          schema:
            pattern: .+
            type: string
      responses:
        "201":
          description: File Deleted
        "404":
          description: Not Found
  /v1/supported-mime-type:
    get:
      x-onecx:
        permissions:
          document:
            - read
      tags:
        - SupportedMimeTypeControllerV1
      description: Finds all supported mime-types
      operationId: getAllSupportedMimeTypes
      responses:
        "200":
          description: Found all supported mime-types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SupportedMimeType'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
    post:
      x-onecx:
        permissions:
          document:
            - write
      tags:
        - SupportedMimeTypeControllerV1
      description: Creates supported mime-type
      operationId: createSupportedMimeType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupportedMimeTypeCreateUpdate'
      responses:
        "201":
          description: Created supported mime-type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportedMimeType'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
  /v1/supported-mime-type/{id}:
    get:
      x-onecx:
        permissions:
          document:
            - read
      tags:
        - SupportedMimeTypeControllerV1
      description: Gets supported mime-type by id
      operationId: getSupportedMimeTypeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportedMimeType'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
    put:
      x-onecx:
        permissions:
          document:
            - write
      tags:
        - SupportedMimeTypeControllerV1
      description: Updates supported mime-type by id
      operationId: updateSupportedMimeTypeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupportedMimeTypeCreateUpdate'
      responses:
        "200":
          description: Updated supported mime-type by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportedMimeType'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
    delete:
      x-onecx:
        permissions:
          document:
            - delete
      tags:
        - SupportedMimeTypeControllerV1
      description: Deletes supported mime-type by id
      operationId: deleteSupportedMimeTypeId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Deleted supported mime-type by id
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RFCProblem'
  /v1/document/files/upload/{documentId}:
    post:
      x-onecx:
        permissions:
          document:
            - write
      tags:
        - DocumentControllerV1
      operationId: uploadAllFiles
      description: uploads all the files
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: MultipartFormDataInput
                  description: upload the multipart files
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
        '400':
          description: Bad request
        '404':
          description: Not found

components:
  schemas:
    AttachmentCreateUpdate:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        mimeTypeId:
          type: string
        file:
          type: string
        fileName:
          type: string
    Attachment:
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
        size:
          type: number
        sizeUnit:
          $ref: '#/components/schemas/AttachmentUnit'
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        storage:
          type: string
        externalStorageURL:
          type: string
        mimeType:
          $ref: '#/components/schemas/SupportedMimeType'
        fileName:
          type: string
        storageUploadStatus:
          type: boolean
    AttachmentUnit:
      enum:
        - BYTES
      type: string
    CategoryCreateUpdate:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        categoryVersion:
          type: string
    Category:
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        name:
          type: string
        categoryVersion:
          type: string
    ChannelCreateUpdate:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Channel:
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        name:
          type: string
    DocumentCharacteristicCreateUpdate:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        value:
          type: string
    DocumentCharacteristic:
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        name:
          type: string
        value:
          type: string
    DocumentCreateUpdate:
      required:
        - name
        - typeId
        - channel
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        name:
          type: string
        description:
          type: string
        lifeCycleState:
          $ref: '#/components/schemas/LifeCycleState'
        documentVersion:
          type: string
        tags:
          uniqueItems: true
          type: array
          items:
            type: string
        typeId:
          type: string
        specification:
          $ref: '#/components/schemas/DocumentSpecificationCreateUpdate'
        channel:
          $ref: '#/components/schemas/ChannelCreateUpdate'
        documentRelationships:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DocumentRelationshipCreateUpdate'
        characteristics:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DocumentCharacteristicCreateUpdate'
        relatedParties:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RelatedPartyRefCreateUpdate'
        relatedObject:
          $ref: '#/components/schemas/RelatedObjectRefCreateUpdate'
        categories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CategoryCreateUpdate'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentCreateUpdate'
    DocumentDetail:
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        name:
          type: string
        description:
          type: string
        lifeCycleState:
          $ref: '#/components/schemas/LifeCycleState'
        documentVersion:
          type: string
        channel:
          $ref: '#/components/schemas/Channel'
        tags:
          uniqueItems: true
          type: array
          items:
            type: string
        type:
          $ref: '#/components/schemas/DocumentType'
        specification:
          $ref: '#/components/schemas/DocumentSpecification'
        documentRelationships:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DocumentRelationship'
        characteristics:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DocumentCharacteristic'
        relatedParties:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RelatedPartyRef'
        relatedObject:
          $ref: '#/components/schemas/RelatedObjectRef'
        categories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Category'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
    DocumentSearchCriteria:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        lifeCycleState:
          type: array
          items:
            $ref: '#/components/schemas/LifeCycleState'
        documentTypeId:
          type: array
          items:
            type: string
        channelName:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        createBy:
          type: string
        objectReferenceId:
          type: string
        objectReferenceType:
          type: string
        pageNumber:
          type: integer
          minimum: 0
          default: 0
        pageSize:
          type: integer
          minimum: 1
          maximum: 200
          default: 200
    DocumentRelationshipCreateUpdate:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        documentRefId:
          type: string
    DocumentRelationship:
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        type:
          type: string
        documentRefId:
          type: string
    DocumentSpecificationCreateUpdate:
      type: object
      properties:
        name:
          type: string
        specificationVersion:
          type: string
    DocumentSpecification:
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        name:
          type: string
        specificationVersion:
          type: string
    DocumentTypeCreateUpdate:
      required:
        - name
      type: object
      properties:
        name:
          type: string
    DocumentType:
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        name:
          type: string
    File:
      type: object
      properties:
        path:
          type: string
        invalid:
          type: boolean
        name:
          type: string
        parent:
          type: string
        parentFile:
          $ref: '#/components/schemas/File'
        absolute:
          type: boolean
        absolutePath:
          type: string
        absoluteFile:
          $ref: '#/components/schemas/File'
        canonicalPath:
          type: string
        canonicalFile:
          $ref: '#/components/schemas/File'
        directory:
          type: boolean
        file:
          type: boolean
        hidden:
          type: boolean
        totalSpace:
          format: int64
          type: integer
        freeSpace:
          format: int64
          type: integer
        usableSpace:
          format: int64
          type: integer
    LifeCycleState:
      enum:
        - DRAFT
        - REVIEW
        - RELEASED
        - ARCHIVED
      type: string
    OffsetDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50-04:00
    PageResult:
      type: object
      properties:
        totalElements:
          format: int64
          type: integer
        number:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        totalPages:
          format: int64
          type: integer
        stream:
          type: array
          items:
            type: object
    RFCProblem:
      required:
        - type
        - title
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          format: int32
          type: integer
        detail:
          type: string
        instance:
          type: string
        problems:
          type: array
          items:
            $ref: '#/components/schemas/RFCProblemDetail'
    RFCProblemDetail:
      required:
        - message
        - messageId
        - messageType
      type: object
      properties:
        message:
          type: string
        messageId:
          type: string
        code:
          type: string
        messageType:
          type: string
    RelatedObjectRefCreateUpdate:
      type: object
      properties:
        id:
          type: string
        involvement:
          type: string
        objectReferenceType:
          type: string
        objectReferenceId:
          type: string
    RelatedObjectRef:
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        involvement:
          type: string
        objectReferenceType:
          type: string
        objectReferenceId:
          type: string
    RelatedPartyRefCreateUpdate:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        role:
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    RelatedPartyRef:
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        name:
          type: string
        role:
          type: string
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    RestException:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        errorCode:
          type: object
        parameters:
          type: array
          items:
            type: object
        namedParameters:
          type: object
          additionalProperties:
            type: object
    Status:
      enum:
        - OK
        - CREATED
        - ACCEPTED
        - NO_CONTENT
        - RESET_CONTENT
        - PARTIAL_CONTENT
        - MOVED_PERMANENTLY
        - FOUND
        - SEE_OTHER
        - NOT_MODIFIED
        - USE_PROXY
        - TEMPORARY_REDIRECT
        - BAD_REQUEST
        - UNAUTHORIZED
        - PAYMENT_REQUIRED
        - FORBIDDEN
        - NOT_FOUND
        - METHOD_NOT_ALLOWED
        - NOT_ACCEPTABLE
        - PROXY_AUTHENTICATION_REQUIRED
        - REQUEST_TIMEOUT
        - CONFLICT
        - GONE
        - LENGTH_REQUIRED
        - PRECONDITION_FAILED
        - REQUEST_ENTITY_TOO_LARGE
        - REQUEST_URI_TOO_LONG
        - UNSUPPORTED_MEDIA_TYPE
        - REQUESTED_RANGE_NOT_SATISFIABLE
        - EXPECTATION_FAILED
        - PRECONDITION_REQUIRED
        - TOO_MANY_REQUESTS
        - REQUEST_HEADER_FIELDS_TOO_LARGE
        - INTERNAL_SERVER_ERROR
        - NOT_IMPLEMENTED
        - BAD_GATEWAY
        - SERVICE_UNAVAILABLE
        - GATEWAY_TIMEOUT
        - HTTP_VERSION_NOT_SUPPORTED
        - NETWORK_AUTHENTICATION_REQUIRED
      type: string
    StorageUploadAudit:
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        documentId:
          type: string
        documentName:
          type: string
        documentDescription:
          type: string
        documentVersion:
          type: string
        lifeCycleState:
          type: string
        channelId:
          type: string
        channelName:
          type: string
        documentTypeId:
          type: string
        documentTypeName:
          type: string
        attachmentId:
          type: string
        fileName:
          type: string
        name:
          type: string
        attachmentDescription:
          type: string
        mimeTypeId:
          type: string
        mimeTypeName:
          type: string
        specificationId:
          type: string
        specificationName:
          type: string
        relatedObjectId:
          type: string
        involvement:
          type: string
        objectReferenceType:
          type: string
        objectReferenceId:
          type: string
    SupportedMimeTypeCreateUpdate:
      required:
        - name
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    SupportedMimeType:
      type: object
      properties:
        modificationCount:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        name:
          type: string
        description:
          type: string
    TimePeriod:
      type: object
      properties:
        startDateTime:
          $ref: '#/components/schemas/OffsetDateTime'
        endDateTime:
          $ref: '#/components/schemas/OffsetDateTime'
    Traceable:
      type: object
      properties:
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time

    DocumentResponse:
      allOf:
        - $ref: '#/components/schemas/Traceable'
        - type: object
          properties:
            attachmentResponse:
              type: object
              additionalProperties:
                type: integer
              description: Map of attachment names to their response codes
    FileMultipartBody:
      type: object
      properties:
        file:
          type: File
    FileInfo:
      type: object
      properties:
        contentType:
          type: string
          description: Type of file based on the InputStream.
        path:
          type: string
          description: The path of the file.
        bucket:
          type: string
          description: Name of bucket.
